PARK 01 재귀함수



재귀함수란? 
메서드 혹은 함수 내부에서 자기자신의 메서드 혹은 함수를 다시 호출하는 함수



예시 문제

data = [3, 5, 8]

성분들의 합으로 표현할 수 있는 숫자의 경우의 수는?
부분집합의 개수 2^n

성분들의 합으로 표현할 수 있는 경우의 가지 수는?
반복문을 활용한 완전탐색
result = set()
for i in range(2):
    for j in range(2):
        for k in range(2):
            result.add(data[0] * i + data[1] * j + data[2] * k)
print(result)
{0, 3, 5, 8, 11, 13, 16}

data = [3, 5, 7, 10, 12, 15, 20]

성분의 개수 = 반복문의 개수



재귀함수 원리



재귀함수 사용 이유
코드의 간결화 및 변수 사용 최적화



재귀함수 종료
조건문을 활용하여 재귀함수 종료조건을 삽입



재귀함수를 활용한 완전탐색

data = [3, 5, 8]

def recur(index, value)
    # 재귀함수 종료 구문
    if index == len(data):
        result.add(value)
    # 재귀함수 본문
    else:
        recur(index + 1, value + data[index])
        recur(index + 1, value)
result = set()
recur(0, 0)
print(result)
{0, 3, 5, 8, 11, 13, 16}



재귀함수 활용

팩토리얼
def factorila(n):
    if n == 1:
        retunr 1
    else:
        return n * factorial(n - 1)

피보나치 수열
def fibonacci(n):
    if n == 0 or n == 1:
        return 1
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)



재귀함수 깊이
파이썬 최대 깊이 기본값 1000
