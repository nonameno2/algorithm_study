알고리즘 특강
진법변환과 비트연산



PART 01
진법변환

진법이란 
수를 셀 때 자릿수가 올라가는 단위를 기준으로 하는 셈법의 총칭
사용하는 숫자의 개수가 진법의 숫자를 의미

진법을 왜 사용할까?

진법 변환하기

10진법 -> 2진법
10(10) = 1010(2)
bin(10) = '0b1010'

10진법 -> 8진법
95(10) = 137(8)
oct(95) = '0o137'

10진법 -> 16진법
350(10) = 15e(16)
hex(350) = '0x15e'

n진법 -> 10진법
int(0b1101) = 13
int(0o73) = 59
int(0x7e) = 126



PART 02
비트연산

비트연산이란
한 개 혹은 두 개의 이진수에 적용되는 연산

비트연산 종류

& AND
각각의 자릿수를 비교하여 둘 다 1일 경우 1, 아니면 0을 반환한다

| OR
각각의 자릿수를 비교하여 둘 중 하나가 1일 경우 1, 아니면 0을 반환한다

^ XOR
각각의 자릿수를 비교하여 다르면 1, 같으면 0을 반환한다

~ NOT 
비트 반전 연산자로 1은 0으로 0은 1로 변환한다 -> 1을 더한 뒤 부호를 바꿔준다
(음수의 표현을 처리하기 위함)
bin(~0b0000) -> -0b0001
bin(~0b0001) -> -0b0010
bin(~0b0010) -> -0b0011
bin(~0b0011) -> -0b0100

<<,>> SHIFT
<< 비트 이동 연산자로 왼쪽으로 주어진 수만큼 옮긴다
bin(0b11<<3) = 0b11000
bin(0b1100<<2) = 0b110000
>> 비트 이동 연산자로 오른쪽으로 주어진 수만큼 옮긴다
bin(0b11>>1) = 0b1
bin(0b1100>>2) = 0b11

비트연산과 십진법
35 | 5 -> 100011 | 101 -> 100111 -> 39

비트연산 활용
1 컴퓨터 연산을 위한 비트 필드
2 데이터의 압축 및 암호화
3 유한 상태 기계
4 컴퓨터 통신을 위한 포트 및 소켓
